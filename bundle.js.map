{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/service/trainingType/consts.js","../node_modules/svelte/store/index.mjs","../src/service/trainingType/store.js","../src/service/trainingType/TrainingType.svelte","../src/service/language/consts.js","../src/service/language/store.js","../src/service/language/SelectedLanguage.svelte","../src/service/setupMode/store.js","../src/service/setupMode/Start.svelte","../src/components/KeyPress.svelte","../src/data/keys.js","../src/trainings/selectKeys/store.js","../src/trainings/selectKeys/Setup.svelte","../src/trainings/selectKeys/index.js","../src/trainings/randomKeys/index.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","export const training = {\n\tselectKeys: 0,\n\trandomKey: 1,\n};\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {writable} from \"svelte/store\";\nimport {training} from \"./consts\";\n\nexport const trainingType = writable(training.selectKeys);\n","<script>\n\timport 'bulma/css/bulma.css'\n\timport {training} from './consts';\n\timport {trainingType} from './store';\n</script>\n\n<div class=\"block\">\n\tSelect training\n</div>\n<div class=\"control block\">\n\t<label class=\"radio\">\n\t\t<input type=radio bind:group={$trainingType} value={training.selectKeys}>\n\t\tSelect Keys\n\t</label>\n\t<label class=\"radio\">\n\t\t<input type=radio bind:group={$trainingType} value={training.randomKey}>\n\t\tRandom Key\n\t</label>\n</div>\n","export const language = {\n\ten: 'en',\n\tru: 'ru',\n};\n","import {writable} from \"svelte/store\";\nimport {language} from \"./consts\";\n\nexport const selectedLanguage = writable(language.en);\n","<script>\n\timport 'bulma/css/bulma.css'\n\timport {language} from './consts';\n\timport {selectedLanguage} from './store';\n</script>\n\n<div class=\"block\">\n\tSelect language\n</div>\n<div class=\"control block\">\n\t<label class=\"radio\">\n\t\t<input type=radio bind:group={$selectedLanguage} value={language.en}>\n\t\tEnglish\n\t</label>\n\t<label class=\"radio\">\n\t\t<input type=radio bind:group={$selectedLanguage} value={language.ru}>\n\t\tRussian\n\t</label>\n</div>\n","import {writable} from \"svelte/store\";\n\nexport const setupMode = writable(true);\n","<script>\n\timport 'bulma/css/bulma.css'\n\timport { setupMode } from './store';\n\n\texport let setupOk;\n\n\tlet disabled;\n\t$: disabled = !$setupOk;\n</script>\n\n<svelte:body on:click=\"{() => setupMode.set(true)}\"/>\n\n{#if $setupMode}\n\t<button\n\t\t\tclass=\"button is-primary is-large block\"\n\t\t\ton:click|stopPropagation=\"{() => setupMode.set(false)}\"\n\t\t\t{disabled}\n\t>\n\t\tStart\n\t</button>\n{/if}\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction onKeyDown(event) {\n\t\tdispatch('key', event.key.toLowerCase());\n\t}\n</script>\n\n<svelte:body on:keydown={onKeyDown}/>\n","import {selectedLanguage} from \"../service/language\";\n\nlet lang = '';\nselectedLanguage.subscribe(value => lang = value);\n\nexport function isKey(value) {\n\treturn keys[lang].some(({key}) => key == value);\n}\n\nexport function getFromSelectedKeys(selected) {\n\tconst key = getRandomItem(selected);\n\tconst keyData = keys[lang].find(data => data.key === key);\n\treturn [keyData.key, getHandBase(keyData)];\n}\n\nexport function getRandomKey() {\n\tconst keyData = getRandomItem(keys[lang]);\n\treturn [keyData.key, getHandBase(keyData)];\n}\n\nfunction getHandBase(keyData) {\n\treturn keyData.base\n\t\t? getRandomItem(keyData.base[lang])\n\t\t: null;\n}\n\nfunction getRandomItem(items) {\n\treturn items[Math.floor(Math.random() * items.length)];\n}\n\nconst leftHand = {\n\tru: 'фыва',\n\ten: 'asdf',\n};\nconst rightHand = {\n\tru: 'олдж',\n\ten: 'jkl;',\n};\n\nconst keys = {\n\tru: [\n\t\t{key: 'ё', base: leftHand},\n\t\t{key: '1', base: leftHand},\n\t\t{key: '2', base: leftHand},\n\t\t{key: '3', base: leftHand},\n\t\t{key: '4', base: leftHand},\n\t\t{key: '5', base: leftHand},\n\t\t{key: '6', base: leftHand},\n\t\t{key: '7', base: rightHand},\n\t\t{key: '8', base: rightHand},\n\t\t{key: '9', base: rightHand},\n\t\t{key: '0', base: rightHand},\n\t\t{key: '-', base: rightHand},\n\t\t{key: '=', base: rightHand},\n\t\t{key: '\\\\', base: rightHand},\n\n\t\t{key: '!', base: leftHand},\n\t\t{key: '\"', base: leftHand},\n\t\t{key: '№', base: leftHand},\n\t\t{key: ';', base: leftHand},\n\t\t{key: '%', base: leftHand},\n\t\t{key: ':', base: leftHand},\n\t\t{key: '?', base: rightHand},\n\t\t{key: '*', base: rightHand},\n\t\t{key: '(', base: rightHand},\n\t\t{key: ')', base: rightHand},\n\t\t{key: '_', base: rightHand},\n\t\t{key: '+', base: rightHand},\n\t\t{key: '/', base: rightHand},\n\n\t\t{key: 'й', base: leftHand},\n\t\t{key: 'ц', base: leftHand},\n\t\t{key: 'у', base: leftHand},\n\t\t{key: 'к', base: leftHand},\n\t\t{key: 'е', base: leftHand},\n\t\t{key: 'н', base: rightHand},\n\t\t{key: 'г', base: rightHand},\n\t\t{key: 'ш', base: rightHand},\n\t\t{key: 'щ', base: rightHand},\n\t\t{key: 'з', base: rightHand},\n\t\t{key: 'х', base: rightHand},\n\t\t{key: 'ъ', base: rightHand},\n\n\t\t{key: 'ф'},\n\t\t{key: 'ы'},\n\t\t{key: 'в'},\n\t\t{key: 'а'},\n\t\t{key: 'п', base: leftHand},\n\t\t{key: 'р', base: rightHand},\n\t\t{key: 'о'},\n\t\t{key: 'л'},\n\t\t{key: 'д'},\n\t\t{key: 'ж'},\n\t\t{key: 'э', base: rightHand},\n\n\t\t{key: 'я', base: leftHand},\n\t\t{key: 'ч', base: leftHand},\n\t\t{key: 'с', base: leftHand},\n\t\t{key: 'м', base: leftHand},\n\t\t{key: 'и', base: leftHand},\n\t\t{key: 'т', base: rightHand},\n\t\t{key: 'ь', base: rightHand},\n\t\t{key: 'б', base: rightHand},\n\t\t{key: 'ю', base: rightHand},\n\t\t{key: '.', base: rightHand},\n\t\t{key: ',', base: rightHand},\n\t],\n\ten: [\n\t\t{key: '`', base: leftHand},\n\t\t{key: '1', base: leftHand},\n\t\t{key: '2', base: leftHand},\n\t\t{key: '3', base: leftHand},\n\t\t{key: '4', base: leftHand},\n\t\t{key: '5', base: leftHand},\n\t\t{key: '6', base: leftHand},\n\t\t{key: '7', base: rightHand},\n\t\t{key: '8', base: rightHand},\n\t\t{key: '9', base: rightHand},\n\t\t{key: '0', base: rightHand},\n\t\t{key: '-', base: rightHand},\n\t\t{key: '=', base: rightHand},\n\t\t{key: '\\\\', base: rightHand},\n\n\t\t{key: '~', base: leftHand},\n\t\t{key: '!', base: leftHand},\n\t\t{key: '@', base: leftHand},\n\t\t{key: '#', base: leftHand},\n\t\t{key: '$', base: leftHand},\n\t\t{key: '%', base: leftHand},\n\t\t{key: '^', base: leftHand},\n\t\t{key: '&', base: rightHand},\n\t\t{key: '*', base: rightHand},\n\t\t{key: '(', base: rightHand},\n\t\t{key: ')', base: rightHand},\n\t\t{key: '_', base: rightHand},\n\t\t{key: '+', base: rightHand},\n\t\t{key: '|', base: rightHand},\n\n\t\t{key: 'q', base: leftHand},\n\t\t{key: 'w', base: leftHand},\n\t\t{key: 'e', base: leftHand},\n\t\t{key: 'r', base: leftHand},\n\t\t{key: 't', base: leftHand},\n\t\t{key: 'y', base: rightHand},\n\t\t{key: 'u', base: rightHand},\n\t\t{key: 'i', base: rightHand},\n\t\t{key: 'o', base: rightHand},\n\t\t{key: 'p', base: rightHand},\n\t\t{key: '[', base: rightHand},\n\t\t{key: ']', base: rightHand},\n\n\t\t{key: '{', base: rightHand},\n\t\t{key: '}', base: rightHand},\n\n\t\t{key: 'a'},\n\t\t{key: 's'},\n\t\t{key: 'd'},\n\t\t{key: 'f'},\n\t\t{key: 'g', base: leftHand},\n\t\t{key: 'h', base: rightHand},\n\t\t{key: 'j'},\n\t\t{key: 'k'},\n\t\t{key: 'l'},\n\t\t{key: ';'},\n\t\t{key: '\\'', base: rightHand},\n\n\t\t{key: ':', base: rightHand},\n\t\t{key: '\"', base: rightHand},\n\n\t\t{key: 'z', base: leftHand},\n\t\t{key: 'x', base: leftHand},\n\t\t{key: 'c', base: leftHand},\n\t\t{key: 'v', base: leftHand},\n\t\t{key: 'b', base: leftHand},\n\t\t{key: 'n', base: rightHand},\n\t\t{key: 'm', base: rightHand},\n\t\t{key: ',', base: rightHand},\n\t\t{key: '.', base: rightHand},\n\t\t{key: '/', base: rightHand},\n\n\t\t{key: '<', base: rightHand},\n\t\t{key: '>', base: rightHand},\n\t\t{key: '?', base: rightHand},\n\t],\n};\n","import {writable} from 'svelte/store';\nimport {isKey} from '../../data/keys';\nimport {selectedLanguage} from \"../../service/language\";\n\nexport const selectKeys = (function() {\n\tconst { subscribe, update, set } = writable('');\n\n\treturn {\n\t\tsubscribe,\n\t\tremoveLastKey: () => {\n\t\t\tupdate(keys => keys.slice(0, -1));\n\t\t},\n\t\taddKey: (key) => {\n\t\t\tif (!isKey(key)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tupdate(keys => {\n\t\t\t\treturn keys.includes(key)\n\t\t\t\t\t? keys\n\t\t\t\t\t: keys + key;\n\t\t\t});\n\t\t},\n\t\treset: () => {\n\t\t\tset('');\n\t\t},\n\t};\n})();\n\nselectedLanguage.subscribe(() => selectKeys.reset());\n","<script>\n\timport KeyPress from '../../components/KeyPress.svelte';\n    import {selectKeys} from './store';\n\n\tfunction onKey(event) {\n\t\tconst key = event.detail;\n\n\t\tif (key === 'backspace') {\n\t\t\tselectKeys.removeLastKey();\n\t\t} else {\n\t\t\tselectKeys.addKey(key);\n\t\t}\n\t}\n</script>\n\n<style>\n\t.keys {\n\t\tfont-size: 64px;\n\t}\n</style>\n\n<KeyPress on:key={onKey}/>\n\n<div>\n\tPress training keys\n</div>\n<div class=\"keys\">\n\t{$selectKeys}\n</div>\n","import {derived} from \"svelte/store\";\nimport {selectKeys} from \"./store\";\nimport {getFromSelectedKeys} from \"../../data/keys\";\n\nexport { default as setupComponent } from './Setup.svelte';\n\nlet selected = '';\nselectKeys.subscribe(value => selected = value);\n\nexport const setupOk = derived(\n\tselectKeys,\n\t$selectKeys => $selectKeys.length > 0\n);\n\nexport function getNextKeys() {\n\treturn getFromSelectedKeys(selected);\n}\n","import { readable } from 'svelte/store';\nimport { getRandomKey } from '../../data/keys';\n\nexport const setupOk = readable(true, () => {});\nexport const getNextKeys = getRandomKey;\n","<script>\n\timport { onDestroy } from 'svelte';\n\timport 'bulma/css/bulma.css'\n\timport { TrainingType, trainingType, training } from './service/trainingType';\n\timport { SelectedLanguage } from './service/language';\n\timport { Start, setupMode } from './service/setupMode';\n\timport KeyPress from './components/KeyPress.svelte';\n\timport * as oneKey from './trainings/selectKeys';\n\timport * as randomKey from './trainings/randomKeys';\n\n\tlet { setupOk, getNextKeys, setupComponent } = oneKey;\n\n\tonDestroy(setupMode.subscribe(value => {\n\t\tif (!value) {\n\t\t\tstart();\n\t\t}\n\t}));\n\n\tonDestroy(trainingType.subscribe(value => {\n\t\tif (value == training.selectKeys) {\n\t\t\t({ setupOk, getNextKeys, setupComponent } = oneKey);\n\t\t} else {\n\t\t\t({ setupOk, getNextKeys, setupComponent } = randomKey);\n\t\t}\n\t}));\n\n\tlet targetKey;\n\tlet nextKey;\n\tlet lastKeys = '';\n\n\tfunction start() {\n\t\tnextKey = null;\n\t\tnext();\n\t}\n\n\tfunction onKey(event) {\n\t\tconst key = event.detail;\n\n\t\tif (key === 'backspace') {\n\t\t\tlastKeys = lastKeys.slice(0, -1);\n\t\t} else if (key.length === 1) {\n\t\t\tlastKeys += key;\n\t\t}\n\t\tcheck();\n\t}\n\n\tlet timer = null;\n\n\tfunction check() {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\ttimer = null;\n\t\t\tif (lastKeys == targetKey) {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, 10);\n\t}\n\n\tfunction next() {\n\t\tlastKeys = '';\n\n\t\tif (nextKey) {\n\t\t\ttargetKey = nextKey;\n\t\t\tnextKey = null;\n\t\t\treturn;\n\t\t}\n\n\t\t[targetKey, nextKey] = getNextKeys();\n\t}\n</script>\n\n<style>\n\t.main {\n\t\tpadding: 20px;\n\t}\n\n\t.main-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t.keys {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tfont-size: 64px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t.lastKeys {\n\t\tdisplay: flex;\n\t}\n</style>\n\n<div class=\"hero is-fullheight main\">\n\t<div class=\"container main-container\">\n\t\t<Start {setupOk}/>\n\n\t\t{#if $setupMode}\n\t\t\t<SelectedLanguage/>\n\t\t\t<TrainingType/>\n\t\t\t<svelte:component this={setupComponent}/>\n\t\t{:else}\n\t\t\t<KeyPress on:key={onKey}/>\n\t\t\t<div class=\"keys is-family-monospace\">\n\t\t\t\t<div>{targetKey}</div>\n\t\t\t\t<div class=\"lastKeys\">\n\t\t\t\t\t<div>&nbsp</div>\n\t\t\t\t\t{@html lastKeys}\n\t\t\t\t\t<div>&nbsp</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","HtmlTag","[object Object]","html","this","e","u","i","n","length","t","innerHTML","Array","from","childNodes","d","m","current_component","set_current_component","get_current_component","Error","onDestroy","createEventDispatcher","type","detail","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","children","intro","SvelteComponent","$destroy","index","indexOf","splice","training","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","trainingType","$trainingType","language","selectedLanguage","$selectedLanguage","setupMode","stopPropagation","disabled","setupOk","$setupOk","dispatch","key","toLowerCase","lang","getHandBase","keyData","base","getRandomItem","items","Math","floor","random","leftHand","ru","en","rightHand","keys","selectKeys","removeLastKey","addKey","some","includes","reset","onKey","selected","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$selectKeys","find","getFromSelectedKeys","getNextKeys","targetKey","nextKey","setupComponent","oneKey","next","randomKey","lastKeys","timer","clearTimeout","setTimeout","body"],"mappings":"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"}