{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Setup.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onDestroy } from 'svelte';\n\timport 'bulma/css/bulma.css'\n\timport { TrainingType, trainingType, training } from './service/trainingType';\n\timport { SelectedLanguage } from './service/language';\n\timport { Start, setupMode } from './service/setupMode';\n\timport KeyPress from './components/KeyPress.svelte';\n\timport * as oneKey from './trainings/selectKeys';\n\timport * as randomKey from './trainings/randomKeys';\n\n\tlet { setupOk, getNextKeys, setupComponent } = oneKey;\n\n\tonDestroy(setupMode.subscribe(value => {\n\t\tif (!value) {\n\t\t\tstart();\n\t\t}\n\t}));\n\n\tonDestroy(trainingType.subscribe(value => {\n\t\tif (value == training.selectKeys) {\n\t\t\t({ setupOk, getNextKeys, setupComponent } = oneKey);\n\t\t} else {\n\t\t\t({ setupOk, getNextKeys, setupComponent } = randomKey);\n\t\t}\n\t}));\n\n\tlet targetKey;\n\tlet nextKey;\n\tlet lastKeys = '';\n\n\tfunction start() {\n\t\tnextKey = null;\n\t\tnext();\n\t}\n\n\tfunction onKey(event) {\n\t\tconst key = event.detail;\n\n\t\tif (key === 'backspace') {\n\t\t\tlastKeys = lastKeys.slice(0, -1);\n\t\t} else if (key.length === 1) {\n\t\t\tlastKeys += key;\n\t\t}\n\t\tcheck();\n\t}\n\n\tlet timer = null;\n\n\tfunction check() {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\ttimer = null;\n\t\t\tif (lastKeys == targetKey) {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, 10);\n\t}\n\n\tfunction next() {\n\t\tlastKeys = '';\n\n\t\tif (nextKey) {\n\t\t\ttargetKey = nextKey;\n\t\t\tnextKey = null;\n\t\t\treturn;\n\t\t}\n\n\t\t[targetKey, nextKey] = getNextKeys();\n\t}\n</script>\n\n<style>\n\t.main {\n\t\tpadding: 20px;\n\t}\n\n\t.main-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t.keys {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tfont-size: 64px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t.lastKeys {\n\t\tdisplay: flex;\n\t}\n</style>\n\n<div class=\"hero is-fullheight main\">\n\t<div class=\"container main-container\">\n\t\t<Start {setupOk}/>\n\n\t\t{#if $setupMode}\n\t\t\t<SelectedLanguage/>\n\t\t\t<TrainingType/>\n\t\t\t<svelte:component this={setupComponent}/>\n\t\t{:else}\n\t\t\t<KeyPress on:key={onKey}/>\n\t\t\t<div class=\"keys is-family-monospace\">\n\t\t\t\t<div>{targetKey}</div>\n\t\t\t\t<div class=\"lastKeys\">\n\t\t\t\t\t<div>&nbsp</div>\n\t\t\t\t\t{@html lastKeys}\n\t\t\t\t\t<div>&nbsp</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n</div>\n",
    "<script>\n\timport KeyPress from '../../components/KeyPress.svelte';\n    import {selectKeys} from './store';\n\n\tfunction onKey(event) {\n\t\tconst key = event.detail;\n\n\t\tif (key === 'backspace') {\n\t\t\tselectKeys.removeLastKey();\n\t\t} else {\n\t\t\tselectKeys.addKey(key);\n\t\t}\n\t}\n</script>\n\n<style>\n\t.keys {\n\t\tfont-size: 64px;\n\t}\n</style>\n\n<KeyPress on:key={onKey}/>\n\n<div>\n\tPress training keys\n</div>\n<div class=\"keys\">\n\t{$selectKeys}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwEC,KAAK,eAAC,CAAC,AACN,OAAO,CAAE,IAAI,AACd,CAAC,AAED,eAAe,eAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,GAAG,CACT,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,SAAS,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,AACd,CAAC;AC/ED,KAAK,cAAC,CAAC,AACN,SAAS,CAAE,IAAI,AAChB,CAAC"
}